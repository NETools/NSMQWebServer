// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NSMQWebServer.Persistence;

#nullable disable

namespace NSMQWebServer.Migrations
{
    [DbContext(typeof(MessageQueueDbContext))]
    partial class MessageQueueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ChannelUser", b =>
                {
                    b.Property<string>("ChannelId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsersUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("ChannelUser");
                });

            modelBuilder.Entity("NSQM.Data.Model.Persistence.Channel", b =>
                {
                    b.Property<string>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("NSQM.Data.Model.Persistence.TaskData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddresseeType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<Guid>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PhaseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ToId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaskDatas");
                });

            modelBuilder.Entity("NSQM.Data.Model.Persistence.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskDataUser", b =>
                {
                    b.Property<int>("TaskDatasId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("TaskDatasId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskDataUser");
                });

            modelBuilder.Entity("ChannelUser", b =>
                {
                    b.HasOne("NSQM.Data.Model.Persistence.Channel", null)
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NSQM.Data.Model.Persistence.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskDataUser", b =>
                {
                    b.HasOne("NSQM.Data.Model.Persistence.TaskData", null)
                        .WithMany()
                        .HasForeignKey("TaskDatasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NSQM.Data.Model.Persistence.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
